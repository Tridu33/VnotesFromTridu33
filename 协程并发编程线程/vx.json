{
    "created_time": "2022-12-31T10:18:04Z",
    "files": [
        {
            "attachment_folder": "",
            "created_time": "2022-12-31T10:18:05Z",
            "id": "22240",
            "modified_time": "2023-05-07T06:01:13Z",
            "name": "并发解决方案总览（stackless协程线程纤程6回调通信进程代数）.md",
            "signature": "31475192826973",
            "tags": [
            ]
        },
        {
            "attachment_folder": "",
            "created_time": "2022-12-31T10:18:05Z",
            "id": "22241",
            "modified_time": "2022-12-31T10:18:05Z",
            "name": "有栈协程的实现原理.md",
            "signature": "102458117327965",
            "tags": [
            ]
        },
        {
            "attachment_folder": "",
            "created_time": "2022-12-31T10:18:05Z",
            "id": "22242",
            "modified_time": "2022-12-31T10:18:05Z",
            "name": "栈编程和函数控制流=从 continuation 与 CPS 讲到 call_cc 与协程 .md",
            "signature": "119418943179869",
            "tags": [
            ]
        },
        {
            "attachment_folder": "",
            "created_time": "2022-12-31T10:18:05Z",
            "id": "22243",
            "modified_time": "2022-12-31T10:18:05Z",
            "name": "程序进程线程协程纤程.md",
            "signature": "136328229424221",
            "tags": [
            ]
        },
        {
            "attachment_folder": "",
            "created_time": "2022-12-31T10:18:04Z",
            "id": "22217",
            "modified_time": "2022-12-31T10:18:04Z",
            "name": "理解有栈无栈协程 - 知乎.url",
            "signature": "70464905940060",
            "tags": [
            ]
        },
        {
            "attachment_folder": "",
            "created_time": "2023-01-01T13:16:12Z",
            "id": "25135",
            "modified_time": "2023-05-09T14:54:24Z",
            "name": "五种网络IO模型和并发模型演进.md",
            "signature": "63442634508188",
            "tags": [
            ]
        },
        {
            "attachment_folder": "",
            "created_time": "2022-12-31T10:17:55Z",
            "id": "19722",
            "modified_time": "2023-05-09T14:51:34Z",
            "name": "Reactor和Proactor.md",
            "signature": "74016843893843",
            "tags": [
            ]
        }
    ],
    "folders": [
        {
            "name": "asyncio并发py包"
        },
        {
            "name": "Continuation_CPS"
        },
        {
            "name": "cpp多线程并发"
        },
        {
            "name": "pi演算并发CSP通信进程代数go"
        },
        {
            "name": "各种语言的协程并发线程实例"
        },
        {
            "name": "Haskell并发编程"
        },
        {
            "name": "循环转递归转迭代转递归转循环"
        },
        {
            "name": "code"
        },
        {
            "name": "JS-手撕promise实现原理"
        },
        {
            "name": "Java并发JUC"
        },
        {
            "name": "Actor"
        },
        {
            "name": "RustAsync"
        },
        {
            "name": "Go并发"
        },
        {
            "name": "Java-BIO-NIO-AIO"
        }
    ],
    "id": "22181",
    "modified_time": "2022-12-31T10:18:04Z",
    "signature": "98665661205596",
    "version": 3
}
